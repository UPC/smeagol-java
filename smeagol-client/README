smeagol-client 0.01
-------------------

Requisits
---------

Per compilar:

 * JDK5 o superior (també serveix OpenJDK)
 * Maven 2

En temps d'execució, cal tenir disponibles al CLASSPATH les llibreries següents:

 * Apache commons (commons-lang 2.4, commons-collections 3.2.1, commons-validator 1.3.1)
 * Jersey Apache client 1.4
 * Joda Time 1.6
 * Google-gson 1.6
 * log4j 1.2

Per a executar els tests, necessitareu les següents llibreries:

 * jUnit 4.8

Les versions indicades són les que s'inclouen al fitxer pom.xml del projecte Maven.
És probable que el programa pugui compilar i funcionar correctament amb versions 
anteriors de les llibreries, però no està provat. Per comprovar-ho, us recomanem
modificar el pom.xml indicant les versions de què disposeu en el vostre sistema, 
i intentar compilar i passar els tests.



Compilar el codi
----------------

 * Per compilar el codi o executar els tests cal executar:

        mvn compile

 * Per executar els tests, cal tenir funcionant un servidor Sméagol de proves.
   S'han de definir dues variables d'entorn, una amb la URL del servidor, i una
   altra amb el path absolut a la base de dades utilitzada pel servidor de proves:

        export SMEAGOL_URL=http://localhost:3000
        export SMEAGOL_DB_PATH=/path/to/smeagol.db
        mvn test

 * El fitxer .jar es pot obtenir amb la comanda:

        mvn package
        
   Els fitxers resultats de la compilació o empaquetat es troben al subdirectori
   ./target.

 *  Si es vol crear el .jar encara que fallin els tests (per si no tenim un servidor de proves):

        mvn package -DskipTests=true

 * Per empaquetar el Javadoc:

        mvn javadoc:jar

 * Per empaquetar el codi font:

        mvn source:jar

 * Per obtenir les dependències del projecte:

        mvn dependency:copy-dependencies

   Això deixarà tots els jar de les llibreries necessàries per còrrer el client
   a sota el directori target/dependencies. Les haureu d'incloure al vostre classpath.


Generar la documentació
-----------------------

 * Executar la següent instrucció per generar el Javadoc de la API:

        mvn javadoc:javadoc

 * Executar la següent instrucció per generar informacio sobre el projecte en format HTML:

        mvn site

   La documentació es genera sota el subdirectori target/site.

